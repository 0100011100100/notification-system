const express = require('express');
const webpush = require('web-push');
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
const port = 8080;

// VAPID keys generated by you
const vapidKeys = {
  publicKey: 'BGLwbzz_qBlUqsEis2xT67hoGW2TQxuuN6UPZjWzRlV76oLSF6YAvB2CM9w2JQuDVb0Tu6JfZvVvmpDq0nM9Y_4',
  privateKey: 'oGv-7xJ63OpthC4IYU_Q_HH7DepSmtAveYxFi7CzgkY'
};

// Configure Web Push with your VAPID keys
webpush.setVapidDetails(
  'mailto:alsowebhook@gmail.com', // Replace with your contact email
  vapidKeys.publicKey,
  vapidKeys.privateKey
);

// Middleware to serve static files (e.g., HTML, CSS, JS)
app.use(express.static(path.join(__dirname, 'public')));
app.use(bodyParser.json());

// In-memory store for subscriptions (replace with your database for production)
let subscriptions = [];

// Route to serve the HTML page
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// Route to handle subscription
app.post('/subscribe', (req, res) => {
  const subscription = req.body;
  subscriptions.push(subscription);
  console.log('New subscription added:', subscription);
  res.status(201).json({});
});

// Route to send notifications to all subscribed users
app.post('/send-notification', (req, res) => {
  const notificationPayload = {
    notification: {
      title: 'Test Notification',
      body: req.body.message || 'This is a default notification message.',
      icon: 'assets/icons/icon-512x512.png'
    }
  };

  const promises = subscriptions.map(sub => {
    return webpush.sendNotification(sub, JSON.stringify(notificationPayload))
      .catch(err => {
        console.error('Error sending notification:', err);
      });
  });

  Promise.all(promises)
    .then(() => {
      res.status(200).json({ message: 'Notification sent to all subscribers.' });
    })
    .catch(err => {
      console.error('Error sending notifications:', err);
      res.status(500).json({ error: 'Failed to send notifications.' });
    });
});

// Start the server
app.listen(port, () => {
  console.log(`Server running on http://localhost:${port}`);
});